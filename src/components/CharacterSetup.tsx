import React, { useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
import { Button } from './ui/button'
import { Input } from './ui/input'
import { Textarea } from './ui/textarea'
import { Label } from './ui/label'
import { Avatar, AvatarFallback, AvatarImage } from './ui/avatar'
import { Badge } from './ui/badge'
import { Settings, Save, Upload, Download } from 'lucide-react'

interface Character {
  name: string
  avatar: string
  personality: string
  roleScript: string
  status: string
}

interface CharacterSetupProps {
  character: Character
  onCharacterUpdate: (character: Character) => void
  onStartChat: () => void
}

const CharacterSetup: React.FC<CharacterSetupProps> = ({
  character,
  onCharacterUpdate,
  onStartChat
}) => {
  const [isExpanded, setIsExpanded] = useState(true)

  const handleInputChange = (field: keyof Character, value: string) => {
    onCharacterUpdate({
      ...character,
      [field]: value
    })
  }

  const presetCharacters = [
    {
      name: "–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞",
      personality: "–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –¥–µ—Ç–µ–∫—Ç–∏–≤ —Å –æ—Å—Ç—Ä—ã–º —É–º–æ–º –∏ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –í—Å–µ–≥–¥–∞ –∏—â–µ—Ç –ø—Ä–∞–≤–¥—É.",
      roleScript: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤ –ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ –ø–æ–ª–∏—Ü–∏–∏ —É–∂–µ 10 –ª–µ—Ç –∏ –≤–∏–¥–µ–ª–∞ –º–Ω–æ–≥–æ–µ. –£ —Ç–µ–±—è –æ—Å—Ç—Ä—ã–π —É–º, —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å –¥–µ—Ç–∞–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥—Ä—É–≥–∏–µ —É–ø—É—Å–∫–∞—é—Ç. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å –ø—Ä—è–º–æ, –∏–Ω–æ–≥–¥–∞ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ, –Ω–æ –≤—Å–µ–≥–¥–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ. –¢—ã –Ω–µ –ª—é–±–∏—à—å –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤, –Ω–æ —É–≤–∞–∂–∞–µ—à—å —á–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–π.",
      avatar: "üë©‚ÄçüïµÔ∏è",
      status: "–†–∞—Å—Å–ª–µ–¥—É–µ—Ç –¥–µ–ª–æ"
    },
    {
      name: "–î–º–∏—Ç—Ä–∏–π –°—Ç–∞–ª—å–Ω–æ–π",
      personality: "–°—É—Ä–æ–≤—ã–π –≤–æ–∏–Ω-–ø–∞–ª–∞–¥–∏–Ω —Å –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–º —Å–µ—Ä–¥—Ü–µ–º –∏ –Ω–µ–ø–æ–∫–æ–ª–µ–±–∏–º–æ–π –≤–µ—Ä–æ–π –≤ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å.",
      roleScript: "–¢—ã - –ø–∞–ª–∞–¥–∏–Ω –î–º–∏—Ç—Ä–∏–π –°—Ç–∞–ª—å–Ω–æ–π. –¢—ã —Å–ª—É–∂–∏—à—å —Å–≤–µ—Ç—É –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏. –£ —Ç–µ–±—è –±–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ, —Ç—ã –∑–∞—â–∏—â–∞–µ—à—å —Å–ª–∞–±—ã—Ö –∏ —Å—Ä–∞–∂–∞–µ—à—å—Å—è —Å–æ –∑–ª–æ–º. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ, –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∞—Ä—Ö–∞–∏—á–Ω—ã–µ –æ–±–æ—Ä–æ—Ç—ã —Ä–µ—á–∏. –¢—ã –≤–µ—Ä–µ–Ω —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –¥–æ –∫–æ–Ω—Ü–∞.",
      avatar: "‚öîÔ∏è",
      status: "–ì–æ—Ç–æ–≤ –∫ –±–æ—é"
    },
    {
      name: "–õ–∏—Å–∞ –ö–∏—Ü—É–Ω—ç",
      personality: "–ò–≥—Ä–∏–≤–∞—è –∏ —Ö–∏—Ç—Ä–∞—è –ª–∏—Å–∞-–æ–±–æ—Ä–æ—Ç–µ–Ω—å —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ –∏ –ª—é–±–æ–≤—å—é –∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º.",
      roleScript: "–¢—ã - –ª–∏—Å–∞-–æ–±–æ—Ä–æ—Ç–µ–Ω—å –ö–∏—Ü—É–Ω—ç. –¢—ã –∏–≥—Ä–∏–≤–∞—è, —Ö–∏—Ç—Ä–∞—è –∏ –ª—é–±–∏—à—å —Ä–æ–∑—ã–≥—Ä—ã—à–∏. –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å—Å—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–ª–ª—é–∑–∏–∏. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å –∑–∞–≥–∞–¥–∫–∞–º–∏, –ª—é–±–∏—à—å —Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å –∏ –ø–æ–¥—à—É—á–∏–≤–∞—Ç—å. –¢—ã –¥—Ä–µ–≤–Ω—è—è, –Ω–æ –≤—ã–≥–ª—è–¥–∏—à—å –º–æ–ª–æ–¥–æ.",
      avatar: "ü¶ä",
      status: "–ü–ª–µ—Ç–µ—Ç –∏–Ω—Ç—Ä–∏–≥–∏"
    }
  ]

  const loadPreset = (preset: typeof presetCharacters[0]) => {
    onCharacterUpdate({
      name: preset.name,
      avatar: preset.avatar,
      personality: preset.personality,
      roleScript: preset.roleScript,
      status: preset.status
    })
  }

  return (
    <Card className="w-full max-w-4xl mx-auto bg-[#2f3136] border-[#40444b] text-white">
      <CardHeader className="pb-3">
        <div className="flex items-center justify-between">
          <CardTitle className="flex items-center gap-2 text-[#ffffff]">
            <Settings className="w-5 h-5" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ü–µ—Ä—Å–æ–Ω–∞–∂–∞
          </CardTitle>
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setIsExpanded(!isExpanded)}
            className="text-[#b9bbbe] hover:text-white hover:bg-[#40444b]"
          >
            {isExpanded ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å'}
          </Button>
        </div>
      </CardHeader>

      {isExpanded && (
        <CardContent className="space-y-6">
          {/* –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–µ—Å–µ—Ç—ã */}
          <div>
            <Label className="text-[#b9bbbe] text-sm font-medium mb-2 block">
              –ì–æ—Ç–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏:
            </Label>
            <div className="flex flex-wrap gap-2">
              {presetCharacters.map((preset, index) => (
                <Button
                  key={index}
                  variant="outline"
                  size="sm"
                  onClick={() => loadPreset(preset)}
                  className="bg-[#40444b] border-[#40444b] text-[#b9bbbe] hover:bg-[#5865f2] hover:text-white hover:border-[#5865f2]"
                >
                  {preset.avatar} {preset.name}
                </Button>
              ))}
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="space-y-4">
              <div className="flex items-center gap-4">
                <Avatar className="w-16 h-16 bg-[#40444b]">
                  <AvatarImage src="" />
                  <AvatarFallback className="text-2xl bg-[#5865f2]">
                    {character.avatar || 'ü§ñ'}
                  </AvatarFallback>
                </Avatar>
                <div className="flex-1">
                  <Label htmlFor="name" className="text-[#b9bbbe] text-sm font-medium">
                    –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                  </Label>
                  <Input
                    id="name"
                    value={character.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞..."
                    className="bg-[#40444b] border-[#40444b] text-white placeholder:text-[#72767d] focus:border-[#5865f2]"
                  />
                </div>
              </div>

              <div>
                <Label htmlFor="avatar" className="text-[#b9bbbe] text-sm font-medium">
                  –ê–≤–∞—Ç–∞—Ä (—ç–º–æ–¥–∑–∏)
                </Label>
                <Input
                  id="avatar"
                  value={character.avatar}
                  onChange={(e) => handleInputChange('avatar', e.target.value)}
                  placeholder="ü§ñ"
                  className="bg-[#40444b] border-[#40444b] text-white placeholder:text-[#72767d] focus:border-[#5865f2]"
                />
              </div>

              <div>
                <Label htmlFor="status" className="text-[#b9bbbe] text-sm font-medium">
                  –°—Ç–∞—Ç—É—Å
                </Label>
                <Input
                  id="status"
                  value={character.status}
                  onChange={(e) => handleInputChange('status', e.target.value)}
                  placeholder="–ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é"
                  className="bg-[#40444b] border-[#40444b] text-white placeholder:text-[#72767d] focus:border-[#5865f2]"
                />
              </div>

              <div>
                <Label htmlFor="personality" className="text-[#b9bbbe] text-sm font-medium">
                  –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
                </Label>
                <Textarea
                  id="personality"
                  value={character.personality}
                  onChange={(e) => handleInputChange('personality', e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞..."
                  rows={3}
                  className="bg-[#40444b] border-[#40444b] text-white placeholder:text-[#72767d] focus:border-[#5865f2] resize-none"
                />
              </div>
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –†–æ–ª–µ–≤–æ–π —Å–∫—Ä–∏–ø—Ç */}
            <div className="space-y-4">
              <div>
                <Label htmlFor="roleScript" className="text-[#b9bbbe] text-sm font-medium">
                  –†–æ–ª–µ–≤–æ–π —Å–∫—Ä–∏–ø—Ç (–ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)
                </Label>
                <Textarea
                  id="roleScript"
                  value={character.roleScript}
                  onChange={(e) => handleInputChange('roleScript', e.target.value)}
                  placeholder="–¢—ã - [–∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞]. –¢—ã [–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏]. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - [—Ü–µ–ª—å]. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å [—Å—Ç–∏–ª—å —Ä–µ—á–∏]. –¢—ã [–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è]..."
                  rows={12}
                  className="bg-[#40444b] border-[#40444b] text-white placeholder:text-[#72767d] focus:border-[#5865f2] resize-none"
                />
              </div>

              <div className="text-xs text-[#72767d] space-y-1">
                <p><strong>–°–æ–≤–µ—Ç—ã –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∫—Ä–∏–ø—Ç–∞:</strong></p>
                <p>‚Ä¢ –û–ø–∏—à–∏—Ç–µ —Ä–æ–ª—å –∏ –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</p>
                <p>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∏–ª—å —Ä–µ—á–∏ –∏ –º–∞–Ω–µ—Ä—É –æ–±—â–µ–Ω–∏—è</p>
                <p>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Ü–µ–ª–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</p>
                <p>‚Ä¢ –û–ø–∏—à–∏—Ç–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ä–∞–∑–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º</p>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex flex-wrap gap-3 pt-4 border-t border-[#40444b]">
            <Button
              onClick={onStartChat}
              disabled={!character.name || !character.roleScript}
              className="bg-[#5865f2] hover:bg-[#4752c4] text-white"
            >
              –ù–∞—á–∞—Ç—å –†–æ–ª–µ–≤—É—é –ò–≥—Ä—É
            </Button>
            
            <Button
              variant="outline"
              className="bg-[#40444b] border-[#40444b] text-[#b9bbbe] hover:bg-[#36393f] hover:text-white"
            >
              <Save className="w-4 h-4 mr-2" />
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
            
            <Button
              variant="outline"
              className="bg-[#40444b] border-[#40444b] text-[#b9bbbe] hover:bg-[#36393f] hover:text-white"
            >
              <Upload className="w-4 h-4 mr-2" />
              –ó–∞–≥—Ä—É–∑–∏—Ç—å
            </Button>
            
            <Button
              variant="outline"
              className="bg-[#40444b] border-[#40444b] text-[#b9bbbe] hover:bg-[#36393f] hover:text-white"
            >
              <Download className="w-4 h-4 mr-2" />
              –≠–∫—Å–ø–æ—Ä—Ç
            </Button>
          </div>

          {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */}
          {character.name && (
            <div className="bg-[#36393f] rounded-lg p-4 border border-[#40444b]">
              <div className="flex items-center gap-3 mb-2">
                <Avatar className="w-10 h-10">
                  <AvatarFallback className="bg-[#5865f2] text-white">
                    {character.avatar || 'ü§ñ'}
                  </AvatarFallback>
                </Avatar>
                <div>
                  <div className="flex items-center gap-2">
                    <span className="font-medium text-white">{character.name}</span>
                    <Badge variant="secondary" className="bg-[#57f287] text-[#2f3136] text-xs">
                      –û–ù–õ–ê–ô–ù
                    </Badge>
                  </div>
                  <div className="text-sm text-[#b9bbbe]">{character.status}</div>
                </div>
              </div>
              <div className="text-sm text-[#dcddde] bg-[#2f3136] rounded p-3">
                <strong>–ü—Ä–µ–≤—å—é:</strong> {character.personality || '–û–ø–∏—Å–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...'}
              </div>
            </div>
          )}
        </CardContent>
      )}
    </Card>
  )
}

export default CharacterSetup